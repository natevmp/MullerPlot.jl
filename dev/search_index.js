var documenterSearchIndex = {"docs":
[{"location":"#MullerPlot.jl-Documentation","page":"MullerPlot.jl Documentation","title":"MullerPlot.jl Documentation","text":"","category":"section"},{"location":"","page":"MullerPlot.jl Documentation","title":"MullerPlot.jl Documentation","text":"CurrentModule = MullerPlot","category":"page"},{"location":"#Module-Index","page":"MullerPlot.jl Documentation","title":"Module Index","text":"","category":"section"},{"location":"","page":"MullerPlot.jl Documentation","title":"MullerPlot.jl Documentation","text":"Modules = [MullerPlot]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"#Detailed-API","page":"MullerPlot.jl Documentation","title":"Detailed API","text":"","category":"section"},{"location":"","page":"MullerPlot.jl Documentation","title":"MullerPlot.jl Documentation","text":"Modules = [MullerPlot]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"#MullerPlot.buildFamilyArray-Tuple{Vector{T} where T<:Integer}","page":"MullerPlot.jl Documentation","title":"MullerPlot.buildFamilyArray","text":"buildFamilyArray(parentVid_vid)\n\nCreate a vector vid_child_Vid, indexed by the variant id's vid, that has as elements the children of each variant stored as a vector of id's. For example, vid_child_Vid[5] is a vector vid_child whose elements are the vid's of the children of the variant with vid=5.\n\nparentVid_vid:    Vector indexed by the variant id's vid, where each element refers to that variant's parent vid. For example parentVid_vid[5] is the vid of the parent of the variant with vid=5.\n\n\n\n\n\n","category":"method"},{"location":"#MullerPlot.getLowerCoordinateFromParent-NTuple{5, Any}","page":"MullerPlot.jl Documentation","title":"MullerPlot.getLowerCoordinateFromParent","text":"getLowerCoordinateFromParent(parent, xL_vid, xU_vid, n_vid, vid_child_Vid)\n\nGet y-axis coordinate for the lower bound of all child clones of a parent clone.\n\nparent:   variant id (vid) of parent clone \nxL_vid:   vector of lower bounds in draw space indexed by variant id's (vid) \nxU_vid:   vector of upper bounds in draw space indexed by variant id's (vid) \nn_vid:    vector of clone sizes indexed by variant id \nvid_child_Vid: vector (indexed by variant id) where each element is a vector of that variant's children (given as their variant id's)\n\n\n\n\n\n","category":"method"},{"location":"#MullerPlot.mullerBounds-Tuple{AbstractMatrix{T} where T<:Real, Array{Vector{V}, 1} where V<:Integer}","page":"MullerPlot.jl Documentation","title":"MullerPlot.mullerBounds","text":"mullerBounds(n_t_vid, vid_child_Vid)\n\nReturn lower and upper bounds xL_t_vid and xU_t_vid of variant bands for creating a Muller plot.\n\nn_t_vid: two dimensional Array whose elements are variant clone sizes. The first dimension _t is the timepoints at which the measurements occured; the second dimension _vid identifies the variant (i.e. the variant id). The first index refers to the wild type. \nvid_child_Vid: A nested array indexed by the variant id's. Its elements are 1D Vectors which contain the variant id's of each variant's children.\n\n\n\n\n\n","category":"method"},{"location":"#MullerPlot.sizeVariantRec-Tuple{Integer, AbstractVector{<:Float64}, AbstractArray{<:AbstractArray{<:Integer}}}","page":"MullerPlot.jl Documentation","title":"MullerPlot.sizeVariantRec","text":"sizeVariantRec(vid, n_vid, vid_child_Vid)\n\nGet combined size of all child clones of a variant.\n\nvid:            variant id of parent \nn_vid:          vector of clone sizes indexed by variant id \nvid_child_Vid:  vector (indexed by variant id) where each element is a vector of that variant's children (given as their variant id's)\n\n\n\n\n\n","category":"method"},{"location":"#MullerPlot.variantBirthTimes-Tuple{AbstractMatrix{<:Real}}","page":"MullerPlot.jl Documentation","title":"MullerPlot.variantBirthTimes","text":"variantBirthTimes(n_t_vid)\n\nGet the arrival (birth) times of each clone in the system\n\n\n\n\n\n","category":"method"}]
}
